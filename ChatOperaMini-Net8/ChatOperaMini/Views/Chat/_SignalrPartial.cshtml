
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script type="text/javascript">
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    connection.on("ReceiveMessage", function (sender, message, messageId, sendDate) {
        if (sender.toLowerCase() !== '@(Model.Sender)'.toLowerCase()) {
            // Make the unread label and messages visible
            const unreadLabel = document.getElementById("unread-label");
            const unreadMessagesContainer = document.getElementById("unread-messages");
            const recentDate = document.getElementById("recent-date");

            unreadLabel.style.display = "block";
            unreadMessagesContainer.style.display = "block";
            if (recentDate) {
                recentDate.style.display = "none";
            }

            // Update the latest date
            document.getElementById("latest-date").textContent = sendDate;
            document.getElementById("write-label").textContent = "Write a reply:";

            // Determine the next index for the hidden input
            const lastInput = unreadMessagesContainer.querySelectorAll("input[type='hidden']");
            const nextIndex = (lastInput === null || lastInput.length === 0) ? 0 : lastInput.length;

            // Create and insert the hidden input
            const hiddenInput = `<input type="hidden" name="unreadMessageIds[${nextIndex}]" value="${messageId}" />`;
            unreadMessagesContainer.insertAdjacentHTML('beforeend', hiddenInput);

            const seqNo = nextIndex + 1;
            // Create a new message element
            const newMessage = `
                                    <div class="message">
                                        <a href="#u${messageId}">
                                            [${seqNo}] ${sender}: ${message}
                                        </a>
                                    </div>
                                `;

            // Insert the new message at the end of the unread messages container
            unreadMessagesContainer.insertAdjacentHTML('beforeend', newMessage);

        }
    });

    connection.start().catch(function (err) {
        console.error(err.toString());
    });
</script>